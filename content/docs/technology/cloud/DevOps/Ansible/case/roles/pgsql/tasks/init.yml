---
#file: init.yml
- name: Check pgsql command exists
  stat: path={{ pg_dir }}/bin/pg_ctl
  register: pc

- name: Copy pgsql compress file to remote server
  copy: src=postgresql-{{ pgsql_version }}.tar.gz dest=/usr/local/src
  when: pc.stat.exists == false

- name: Uncompress postgresql-{{ pgsql_version }}.tar.gz
  unarchive: src=/usr/local/src/postgresql-{{ pgsql_version }}.tar.gz dest=/usr/local/src/ remote_src=yes
  when: pc.stat.exists == false

- name: Install required packages of pgsql
  yum: state=latest name={{ item }}
  with_items:
  - make
  - gcc 
  - gcc-c++
  - readline-devel
  - zlib 
  - zlib-devel
  when: pc.stat.exists == false

- name: configure pgsql source file
  command: ./configure --prefix={{ pg_dir }}
  args:
    chdir: /usr/local/src/postgresql-{{ pgsql_version }}
  when: pc.stat.exists == false

- name: Compile pgsql source file
  make: chdir=/usr/local/src/postgresql-{{ pgsql_version }} target=install
  when: pc.stat.exists == false

- name: Create the group postgres
  group: name=postgres state=present
  when: pc.stat.exists == false

- name: Create the user postgres
  user: name=postgres group=postgres
  when: pc.stat.exists == false

- name: Delete pgsql source file
  file: path={{ item }} state=absent
  with_items:
  - /usr/local/src/postgresql-{{ pgsql_version }}
  - /usr/local/src/postgresql-{{ pgsql_version }}.tar.gz
  when: pc.stat.exists == false

- name: Check {{ project}}_data directory exists
  stat: path={{ pg_dir }}/{{ project }}_data
  register: dd

- name: Create directory when {{ project }}_data directory not exists
  file: path={{ pg_dir }}/{{ project}}_data state=directory owner=postgres group=postgres
  when: dd.stat.exists == false

- name: Pgsql Database initialization
  command: "{{ pg_dir }}/bin/initdb --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8 --lc-messages=en_US.utf8 --lc-monetary=en_US.utf8 --lc-numeric=en_US.utf8 --lc-time=en_US.utf8 -D {{ pg_dir }}/{{ project}}_data"
  become: true
  become_user: postgres

- name: Generate postgresql.conf
  template: src=postgresql.conf.j2 dest={{ pg_dir }}/{{ project }}_data/postgresql.conf

- name: Check pg_log directory exists
  stat: path={{ pg_dir }}/{{ project }}_data/pg_log
  register: pld

- name: Create directory when pg_log directory not exists
  file: path={{ pg_dir }}/{{ project}}_data/pg_log state=directory owner=postgres group=postgres
  when: pld.stat.exists == false

- name: Check postgresqld scripts file exists
  stat: path=/etc/init.d/postgresql-{{ project }}
  register: ps

- name: Copy postgresqld scripts to remote server when postgresqld scripts not exists
  template: src=postgresqld.j2 dest=/etc/init.d/postgresql-{{ project }} mode=0755
  when: ps.stat.exists == false

- name: Start pgsql service
  command: /etc/init.d/postgresql-{{ project }} start
