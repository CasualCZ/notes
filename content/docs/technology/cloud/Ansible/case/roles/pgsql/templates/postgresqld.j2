#!/bin/bash
#
# chkconfig: 2345 85 15
# description: Starts and stops the PostgreSQL {{ project }} database server

# Source function library.
if [ -f /etc/rc.d/functions ];
then
    . /etc/init.d/functions
fi

NAME=postgresql
LOCKFILE=/var/lock/subsys/$NAME

#source {{ pg_dir }}/etc/sysconfig/loadplLanguages.sh {{ pg_dir }}

# PostgreSQL Service script for Linux

start()
{
	su - postgres -c "touch {{ pg_dir }}/{{ project}}_data/pg_log/startup.log"
	echo $"Starting PostgreSQL {{ project }}: "

	echo
	VerifyPLPaths &> {{ pg_dir }}/{{ project}}_data/pg_log/startup.log
	#LoadPLPaths
	echo

	su -s /bin/sh - postgres -c "PATH={{ pg_dir }}/bin:$PATH_PL_LANGUAGES:$PATH LD_LIBRARY_PATH={{ pg_dir }}/lib:$LD_LIBRARY_PATH_PL_LANGUAGES:$LD_LIBRARY_PATH {{ pg_dir }}/bin/pg_ctl -w start -D \"{{ pg_dir }}/{{ project}}_data\" -l \"{{ pg_dir }}/{{ project}}_data/pg_log/startup.log\""

	if [ $? -eq 0 ];
	then
		touch $LOCKFILE
		echo "PostgreSQL {{ project }} started successfully"
                exit 0
	else
		echo "PostgreSQL {{ project }} did not start in a timely fashion, please see {{ pg_dir }}/{{ project}}_data/pg_log/startup.log for details"
                exit 1
	fi
}

stop()
{
	echo $"Stopping PostgreSQL {{ project }}: "
	su -s /bin/sh - postgres -c "LD_LIBRARY_PATH={{ pg_dir }}/lib:$LD_LIBRARY_PATH {{ pg_dir }}/bin/pg_ctl stop -m fast -w -D \"{{ pg_dir }}/{{ project}}_data\""
	if [ $? -eq 0 ];
	then
		rm -f $LOCKFILE
	fi
}

restart()
{
	su - postgres -c "touch {{ pg_dir }}/{{ project}}_data/pg_log/startup.log"
	echo $"Restarting PostgreSQL {{ project }}: "

        echo
        VerifyPLPaths &> {{ pg_dir }}/{{ project}}_data/pg_log/startup.log
        #LoadPLPaths
        echo

	su -s /bin/sh - postgres -c "PATH={{ pg_dir }}/bin:$PATH_PL_LANGUAGES:$PATH LD_LIBRARY_PATH={{ pg_dir }}/lib:$LD_LIBRARY_PATH_PL_LANGUAGES:$LD_LIBRARY_PATH {{ pg_dir }}/bin/pg_ctl -w restart -D \"{{ pg_dir }}/{{ project}}_data\" -l \"{{ pg_dir }}/{{ project}}_data/pg_log/startup.log\" -m fast"
	
	if [ $? -eq 0 ];
	then
		touch $LOCKFILE
		echo "PostgreSQL {{ project }} restarted successfully"
                exit 0
	else
		echo "PostgreSQL {{ project }} did not start in a timely fashion, please see {{ pg_dir }}/{{ project}}_data/pg_log/startup.log for details"
                exit 1
	fi
}

reload()
{
	echo $"Reloading PostgreSQL {{ project }}: "
	su -s /bin/sh - postgres -c "LD_LIBRARY_PATH={{ pg_dir }}/lib:$LD_LIBRARY_PATH {{ pg_dir }}/bin/pg_ctl reload -D \"{{ pg_dir }}/{{ project}}_data\""
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  reload)
	reload
	;;
  condrestart)
        if [ -f "{{ pg_dir }}/{{ project}}_data/postmaster.pid" ]; then
            restart
        fi
        ;;
  status)
        su -s /bin/sh - postgres -c "LD_LIBRARY_PATH={{ pg_dir }}/lib:$LD_LIBRARY_PATH {{ pg_dir }}/bin/pg_ctl status -D \"{{ pg_dir }}/{{ project}}_data\""
        ;;
  *)
        echo $"Usage: {{ pg_dir }}/installer/server/startupcfg.sh {start|stop|restart|condrestart|status}"
        exit 1
esac

